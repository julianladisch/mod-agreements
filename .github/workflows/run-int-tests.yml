on:
  workflow_call:
    inputs:
      testPath:
        required: true
        type: string
      outputDirectory:
        required: true
        type: string
      tirsEnvVar:
        required: false
        type: string
        default: WorkSourceIdentifier
      syncViaHarvestEnvVar:
        required: false
        type: string
        default: 'false'
      ingressTypeEnvVar:
        required: false
        type: string
        default: 'Harvest'

jobs:
  reusable_integration_test_job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Start containers
        run: |
          cd tools/testing
          docker compose down -v
          docker compose up -d &> dockerOutput.log
          sleep 20
      - name: Inject github build number
        run: |
          # Make github run id available to gradle script via env var BUILD_NUMBER so it ends up in our module descriptor version
          # echo "BUILD_NUMBER=${{github.run_id}}" >> $GITHUB_ENV
          echo "BUILD_NUMBER=${{github.run_number}}" >> $GITHUB_ENV
      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: current
          build-root-directory: service
      - name: Run integration test
        working-directory: ./service
        env:
          TIRS: ${{inputs.tirsEnvVar}}
          SYNC_PACKAGES_VIA_HARVEST: ${{inputs.syncViaHarvestEnvVar}}
          INGRESS_TYPE: ${{inputs.ingressTypeEnvVar}}
        run: |
          echo "TIRS=$TIRS"
          echo "SYNC_PACKAGES_VIA_HARVEST=$SYNC_PACKAGES_VIA_HARVEST"
          echo "INGRESS_TYPE=$INGRESS_TYPE"
          ./gradlew integrationTest --tests ${{ inputs.testPath }}
      - name: Upload Test Results Files
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ inputs.outputDirectory }}
          path: |
            service/build/spock-reports/*.json
            service/build/spock-reports/*.html
            service/build/test-results/**/*.xml
            tools/testing/*.log
          retention-days: 1
      - name: Capture container output
        if: always()
        run: |
          cd tools/testing
          docker ps -a > ps.log
          docker logs minio_tests > minio.log
          docker logs testing_kafka > kafka.log
          docker logs testing_pg > postgres.log
          docker logs testing_zookeeper > zookeeper.log
      - name: Stop containers
        if: always()
        run: |
          cd tools/testing
          docker compose down -v
          sleep 10
